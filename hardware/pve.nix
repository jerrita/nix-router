# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:
let
  tuningScript = pkgs.writeScript "tuning" ''
    #!/usr/bin/env bash
    mkdir -p /etc/clash
    chown -R clash:clash /etc/clash
    if [ -f /etc/init.sh ]; then
      echo "Run /etc/init.sh..."
      bash /etc/init.sh
    fi
  '';
in
{
  imports =
    [
      (modulesPath + "/profiles/qemu-guest.nix")
    ];

  boot.initrd.availableKernelModules = [ "uhci_hcd" "ehci_pci" "ahci" "virtio_pci" "virtio_scsi" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-label/NIXROOT";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-label/NIXBOOT";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  systemd.services.tuning = {
    wantedBy = [ "multi-user.target" ];
    after = [ "network.target" ];
    path = [ pkgs.bash ];
    serviceConfig = {
      Type = "oneshot";
      ExecStart = "${tuningScript}";
    };
  };

  systemd.network.links = {
    "10-wan" = {
      matchConfig.PermanentMACAddress = "bc:24:11:69:9a:34";
      linkConfig.Name = "wan";
    };
    "10-sci" = {
      matchConfig.PermanentMACAddress = "bc:24:11:a6:cf:a5";
      linkConfig.Name = "lan";
    };
  };

  services.qemuGuest.enable = true;


  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s18.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
